---------------------------***Instalacion


composer create-project symfony/website-skeleton curso-symfony5

composer create-project symfony/website-skeleton curso-symfony5 ^5.*


-----------------------------------** CREAR BBDD

https://www.youtube.com/watch?v=eGSXo2YOcLs&t=132s&ab_channel=dfbastidas





--------------------------------- importar clases : 


https://www.youtube.com/watch?v=-cwfj2EFTNk&ab_channel=NeutronDev



--------------------------------------------------------



Cómo resolver la excepción de Symfony 6: The metadata storage is not up to date, please run the sync-metadata-storage command to fix this issue


https://ourcodeworld.co/articulos/leer/1645/como-resolver-la-excepcion-de-symfony-6-the-metadata-storage-is-not-up-to-date-please-run-the-sync-metadata-storage-command-to-fix-this-issue

--------> DATABASE_URL="mysql://username:password@127.0.0.1:3306/db_name?serverVersion=mariadb-10.4.21"



------------------------------SEGUDO PROBLEMA CON BASE DE DATOS CREATE. 
Symfony 5 - "An exception occurred in driver: could not find driver"

https://stackoverflow.com/questions/66626974/symfony-5-an-exception-occurred-in-driver-could-not-find-driver



Modificar bases de datos desde el symfony:

https://www.youtube.com/watch?v=Fw6ftTglL2A&ab_channel=MundoITI 


--------------------------------

Con estas modificaciones realizadas volvamos a generar nuestras tablas, pero como ya hemos creado ambas tablas, ejecutemos primeramente para borrarlas el siguiente comando:

C:\wamp\www\Symfony>php app\console doctrine:schema:drop --force

Para luego volver a crearlas usando el comando ya conocido:

C:\wamp\www\Symfony>php app\console doctrine:schema:create


--------------------------***CARDINALIDAD EN LA BASE DE DATOS: 

uno a muchos
 /**
     * @ORM\OneToMany(targetEntity=Profesion::class, mappedBy="usuario")
     */
    private $profesion;


muchos a uno

   /**
     * @ORM\ManyToOne(targetEntity="App\Entity\TipoProducto", inversedBy="producto")
     */
    private $tipoproduc;

muchos a muchos

 /**
     * @ORM\ManyToMany(targetEntity="App\Entity\Compras", inversedBy="producto")
     */
    private $compra;


   ---> Para este hay que agregar ademas el setter y el getter: 


   /**
     * Get the value of compra
     */ 
    public function getCompra()
    {
        return $this->compra;
    }

    /**
     * Set the value of compra
     *
     * @return  self
     */ 
    public function setCompra($compra)
    {
        $this->compra = $compra;

        return $this;
    }

para subir los cambios: 

php bin/console doctrine:schema:update --force    



recordar refrescar la pagina en el phpmyadmin!!!


--------------------------- *****agregar propiedades a una entidad: 



PS C:\xampp\htdocs\symfony prueba> php bin/console make:entity   

 Class name of the entity to create or update (e.g. AgreeableChef):
 > Profesion

 Your entity already exists! So let's add some new fields!

 New property name (press <return> to stop adding fields):
 >

------------------BORRAR ENTIDAD:

al crearla se crean estos archivos :

 created: src/Entity/Profesion.php
 created: src/Repository/ProfesionRepository.php

asi q se deben borrar ambos. 


-------------------------------------------abrir los controladores y otras paginas desde el xampp:


bueno: IMPORTENTE:  si estas en windows, como yo, la direccion que pones a modo de url, para ver el resultado del controller es: http://localhost/(elnombreDeTuProyect)/public/(elnombredelcontrolador)

o   


http://localhost/(elnombreDeTuProyect)/public/index.php/(elnombredelcontrolador)

