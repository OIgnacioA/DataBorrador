1- git init
2- git status -s
3- git add .
4- git commit -m"name"

* --> git commit -am "x" : agrega y sube
*
*git log --oneline   : ver copias ne repositorio remoto
*

5- git remote add origin -url- .git

----Si ya hay una RAMA en el repositorio;


*  git push origin master (empuja a rama maestra*) 
*-->already exist?: then. 
6- git push origin master 

*  git push -u origin main (sincronizacion de local con remoto)
*  git push origin (-por defecto empuja la rama actual a una rama coincidente del mismo nombre, pero este            comportamiento se puede anular a trav√©s de git config) 

*
* git pull origin master ( trae cambios relizados en el archivo en github a local. )git pull + apodo de repositorio + nombre de rama
*


-----------------------------------------------------------

---- Clonacion: 


- Bash en Carpeta nueva. : git clone -url- 
- Actualizar. 
- $ git branch -a  (ver los branchs remotos- y a partir de ahi, elegir uno con checkout
          , para verlos en la clonacion por ejemplo, porque al clonar al principio no aparecen)
$ git checkout (tambien sirve para esto ultimo) 


      ----a un commit particular: 
      
      git clone https://github.com/usuario/my-repo-name.git my_repo
      cd my_repo
      git reset --hard [Hash del commit que quieres]
      
      
      ------Para ver todos los commits en tu maquina puedes usar git log:

          git log
          
      -------Si quieres ver los ultimos n commits (donde "n" es la cantidad de commits que quieres ver), suponiendo que quiero ver los ultimos 5:

          git log -5
     
-----------------------------------------------------------

------TAGS : 
7- git tag DD/MM/AAAA -m"name"
8- git push --tags
*

----------------------------------------------------------

  ------ BRANCH: 
  
9-  git branch Nombre (crear) 
10- git branch     (mostrar) 
11 - git branch -m "ejemplorenombrado" (renombrar)
12- git checkout -which?

----------
 ------borrar branch 
       git Brang -d {nombre del branch} local
       git branch -D {nombre del branch} local y remoto
